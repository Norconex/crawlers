#-------------------------------------------------------------------------------
# Copyright 2023-2024 Norconex Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------

name: Maven CI/CD Workflow
description: |
  This workflow automates the continuous integration (CI) and
  continuous delivery (CD) process for the Maven project. It includes
  building, testing, and analyzing changes in pull requests, as well
  as deploying snapshot releases to artifact repositories upon
  pushes to the main branch. The workflow ensures that code changes
  are validated and deployed efficiently, maintaining the project's
  quality and reliability.
  
# Only run this workflow if one or more files were changed and not part of 
# 'paths-ignore'.
_paths: &paths
  paths:
    - '**'
  paths-ignore:
    - ./V4_MIGRATION.md
    - '**/README.md'
    - '**/TODO.txt'
on:
  push:
    branches:
      - main
      - release/*
    <<: *paths
  pull_request:
    branches:
      - '*'
    types: [opened, synchronize, reopened]
    <<: *paths

jobs:
  build:
    runs-on: ubuntu-latest

    # Env. vars. defined here are available to all steps. 
    env:
      GPG_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
      GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SHOULD_DEPLOY: >
        ${{ github.repository == 'Norconex/crawlers' &&
        github.event_name == 'push' &&
        github.ref == 'refs/heads/main' }}      

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Merge main|release into PR branch
      if: github.event_name == 'pull_request' && (github.head_ref == 'main' || startsWith(github.head_ref, 'release/'))
      run: git merge --ff-only "origin/${{ github.head_ref }}"

    - name: Generate cache keys
      id: generate-key
      run: |
        echo "MAVEN_CACHE_KEY=${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}" >> $GITHUB_ENV
        echo "SONAR_CACHE_KEY=${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}" >> $GITHUB_ENV

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Maven repository
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ env.MAVEN_CACHE_KEY }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Cache SonarCloud analysis
      uses: actions/cache@v4
      with:
        path: .sonar/cache
        key: ${{ env.SONAR_CACHE_KEY }}
        restore-keys: |
          ${{ runner.os }}-sonar-

    - name: Build, test, and analyze
      run: mvn -B verify sonar:sonar

    # Uploads the full dependency graph to GitHub to improve the quality 
    # of Dependabot alerts this repository can receive
    - name: Update Maven dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Import GPG key
      if: env.SHOULD_DEPLOY == 'true'
      run: |
        echo "$GPG_KEY" | base64 --decode | gpg --batch --import

    - name: Deploy snapshots
      if: env.SHOULD_DEPLOY == 'true'
      run: mvn deploy -DskipTests -s .github/maven-settings.xml
