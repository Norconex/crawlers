<!-- 
   Copyright 2022-2025 Norconex Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.norconex.crawler</groupId>
  <artifactId>nx-crawler-parent</artifactId>  
  <version>4.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Norconex Crawler Parent</name>

  <!-- Change anything in this comment to trigger a full build. -->

  <properties>
    <java.version>17</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.release>${java.version}</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <sonar.skip>true</sonar.skip>
    <sonar.organization>norconex</sonar.organization>
    <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
    <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.sources>src/main/java</sonar.sources>
    <sonar.tests>src/test/java</sonar.tests>
    <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    
    <!-- === Dependencies ================================================== -->

    <!-- Norconex dependencies -->
    <norconex-commons-lang.version>3.0.0-SNAPSHOT</norconex-commons-lang.version>

    <!-- Apache Commons dependencies -->
    <commons-cli.version>1.8.0</commons-cli.version>
    <commons-codec.version>1.17.0</commons-codec.version>
    <commons-collections4.version>4.4</commons-collections4.version>
    <commons-compress.version>1.26.2</commons-compress.version>
    <commons-csv.version>1.11.0</commons-csv.version>
    <commons-io.version>2.16.1</commons-io.version>
    <commons-lang3.version>3.14.0</commons-lang3.version>
    <commons-logging.version>1.3.2</commons-logging.version>
    <commons-text.version>1.12.0</commons-text.version>
    
    <!-- Other dependencies -->
    <aws-java-sdk.version>1.12.750</aws-java-sdk.version>
    <ant.version>1.10.14</ant.version>
    <httpclient5.version>5.2.1</httpclient5.version>
    <jackson.version>2.17.2</jackson.version>
    <jakarta-activation.version>2.1.3</jakarta-activation.version>
    <jakarta-el-api.version>6.0.1</jakarta-el-api.version>
    <jaxb-runtime.version>2.3.5</jaxb-runtime.version>
    <java-cup.version>10k</java-cup.version>
    <jetty.version>11.0.15</jetty.version>
    <json.version>1.8</json.version>
    <jsoup.version>1.15.4</jsoup.version>
    <log4j.version>2.24.3</log4j.version>
    <picocli.version>4.7.6</picocli.version>
    <slf4j.version>2.0.17</slf4j.version>
    <velocity-engine.version>2.3</velocity-engine.version>
    <xerces.version>2.12.2</xerces.version>
    <xml-bind-api.version>4.0.2</xml-bind-api.version>
    <xpath2.version>2.1.100</xpath2.version>

    <!-- Compile-time annotation processors -->
    <lombok.version>1.18.34</lombok.version>

    <!-- Test/Provided dependencies -->
    <assertj.version>3.24.2</assertj.version>
    <easy-random.version>5.0.0</easy-random.version>
    <junit-jupiter.version>5.12.0</junit-jupiter.version>
    <junit-platform.version>1.12.0</junit-platform.version>
    <mockito.version>5.12.0</mockito.version>
    <mockserver.version>5.15.0</mockserver.version>
    <testcontainers.version>1.20.6</testcontainers.version>
    <testcontainers-junit4-mock.version>1.0.1</testcontainers-junit4-mock.version>
    
    <!-- === Maven plugins ================================================= -->

    <editorconfig-maven-plugin.version>0.1.3</editorconfig-maven-plugin.version>
    <formatter-maven-plugin.version>2.24.1</formatter-maven-plugin.version>
    <gmavenplus-plugin.version>4.2.0</gmavenplus-plugin.version>
    <groovy.version>4.0.26</groovy.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <license-maven-plugin.version>2.5.0</license-maven-plugin.version>
    <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
    <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
    <maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>3.7.1</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
    <maven-enforcer-plugin.version>3.3.0</maven-enforcer-plugin.version>
    <maven-gpg-plugin.version>3.2.4</maven-gpg-plugin.version>
    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>3.10.0</maven-javadoc-plugin.version>
    <maven-remote-resources-plugin.version>3.2.0</maven-remote-resources-plugin.version>
    <maven-site-plugin.version>4.0.0-M14</maven-site-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
    <therapi.version>0.15.0</therapi.version>
    <versions-maven-plugin.version>2.16.2</versions-maven-plugin.version>
    <wagon-ssh.version>3.5.3</wagon-ssh.version>

    <!-- Empty by default, see "jacoco" profile-->
    <jacocoArgLine></jacocoArgLine>
  </properties>

  <distributionManagement>
    <repository>
      <id>central</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>  
    <snapshotRepository>
      <id>github</id>
      <url>https://maven.pkg.github.com/Norconex/crawlers</url>
    </snapshotRepository>
  </distributionManagement>
  
  <profiles>
    <profile>
      <id>github-snapshots</id>
      <activation>
        <property>
          <name>env.GITHUB_ACTIONS</name>
        </property>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <gpg.skip>true</gpg.skip>
      </properties>
    </profile>
    <!-- IDEs do not always know what to do with the Jacoco @{argLine}
     placeholder typically required for Jacoco codecoverage to integrate
     with Surefire. So by default we don't have it. When we want to include
     code coverage as part of the Maven tests, we activate this profile with
     passing `-Pjacoco` to Maven arguments (like in our CI/CD builds). 
     -->
    <profile>
      <id>jacoco</id>
      <properties>
        <jacocoArgLine>@{argLine}</jacocoArgLine>
      </properties>
    </profile>
  </profiles>

  <inceptionYear>2022</inceptionYear>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <repositories>
    <!-- 
      TODO:
      Needed for NX common lang snapshots. Replace with github snapshot repo
      when migrated. 
    -->
    <repository>
      <id>sonatype-oss-snapshots</id>
      <name>Sonatype OSS Snapshot Repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
    
      <!-- Norconex dependencies -->
    
      <dependency>
        <groupId>com.norconex.commons</groupId>
        <artifactId>norconex-commons-lang</artifactId>
        <version>${norconex-commons-lang.version}</version>
      </dependency>
      <dependency>
        <groupId>com.norconex.commons</groupId>
        <artifactId>norconex-commons-lang</artifactId>
        <version>${norconex-commons-lang.version}</version>
        <classifier>resources</classifier>
        <type>zip</type>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.norconex.crawler</groupId>
        <artifactId>nx-crawler-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.norconex.crawler</groupId>
        <artifactId>nx-importer</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.norconex.crawler</groupId>
        <artifactId>nx-committer-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.norconex.crawler</groupId>
        <artifactId>nx-grid-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.norconex.crawler</groupId>
        <artifactId>nx-grid-local</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.norconex.crawler</groupId>
        <artifactId>nx-grid-jdbc</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Jackson dependencies -->

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-parameter-names</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
      </dependency>      

      <!-- Other dependencies -->

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-collections4</artifactId>
        <version>${commons-collections4.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-compress</artifactId>
        <version>${commons-compress.version}</version>
      </dependency>      
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commons-text.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons-codec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-csv</artifactId>
        <version>${commons-csv.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity-engine-core</artifactId>
        <version>${velocity-engine.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>com.amazonaws</groupId>
        <artifactId>aws-java-sdk</artifactId>
        <version>${aws-java-sdk.version}</version>
      </dependency>      
      <dependency>
        <groupId>org.apache.httpcomponents.client5</groupId>
        <artifactId>httpclient5</artifactId>
        <version>${httpclient5.version}</version>
      </dependency>
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>${xml-bind-api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${xml-bind-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>${jsoup.version}</version>
      </dependency>
      
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-webapp</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-proxy</artifactId>
        <version>${jetty.version}</version>
      </dependency>
      
      <dependency>
        <groupId>jakarta.activation</groupId>
        <artifactId>jakarta.activation-api</artifactId>
        <version>${jakarta-activation.version}</version>
      </dependency>      

      <dependency>
        <groupId>com.github.therapi</groupId>
        <artifactId>therapi-runtime-javadoc</artifactId>
        <version>${therapi.version}</version>
      </dependency>

      <dependency>
        <groupId>info.picocli</groupId>
        <artifactId>picocli</artifactId>
        <version>${picocli.version}</version>
      </dependency>      
      <!-- TODO: Replace with picocli where used: -->
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>${commons-cli.version}</version>
      </dependency>

      
      <!-- For XSD 1.1 support until Apache releases their Xerces version
           with 1.1 support to Maven central. -->
      <!-- TODO: Still needed???? -->
     <dependency>
        <groupId>org.exist-db.thirdparty.xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>${xerces.version}</version>
        <classifier>xml-schema-1.1</classifier>
        <exclusions>
          <!-- This exclusion is to fix: 
               "The package javax.xml.namespace is accessible from more than 
               one module: <unnamed>, java.xml" -->
          <exclusion>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      
      <!-- xpath2 and java-cup are needed at runtime
           for xercesImpl Schema 1.1 support with above dep. -->
      <dependency>
        <groupId>com.rackspace.eclipse.webtools.sourceediting</groupId>
        <artifactId>org.eclipse.wst.xml.xpath2.processor</artifactId>
        <version>${xpath2.version}</version>
      </dependency>
      <dependency>
        <groupId>edu.princeton.cup</groupId>
        <artifactId>java-cup</artifactId>
        <version>${java-cup.version}</version>
      </dependency>      

      <dependency>
        <groupId>com.tdunning</groupId>
        <artifactId>json</artifactId>
        <version>${json.version}</version>
      </dependency>

      <!-- Tests and provided. -->
      <dependency>
        <groupId>org.jeasy</groupId>
        <artifactId>easy-random-core</artifactId>
        <version>${easy-random.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit-jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-launcher</artifactId>
        <version>${junit-platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.platform</groupId>
        <artifactId>junit-platform-engine</artifactId>
        <version>${junit-platform.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j2-impl</artifactId>
        <version>${log4j.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant</artifactId>
        <version>${ant.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>selenium</artifactId>
        <version>${testcontainers.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>software.xdev</groupId>
        <artifactId>testcontainers-junit4-mock</artifactId>
        <version>${testcontainers-junit4-mock.version}</version>
      </dependency>      
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mock-server</groupId>
        <artifactId>mockserver-netty</artifactId>
        <version>${mockserver.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mock-server</groupId>
        <artifactId>mockserver-client-java</artifactId>
        <version>${mockserver.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
       <groupId>org.mock-server</groupId>
         <artifactId>mockserver-junit-jupiter</artifactId>
        <version>${mockserver.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- The following is to test write/read to/from XML/JSON/Yaml -->    
      <dependency>
        <groupId>jakarta.el</groupId>
        <artifactId>jakarta.el-api</artifactId>
        <version>${jakarta-el-api.version}</version>
        <scope>test</scope>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>false</filtering>
        <directory>${project.build.sourceDirectory}</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
      <resource>
        <filtering>false</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
      <!-- TODO: removed if not needed:
      <resource>
        <filtering>false</filtering>
        <directory>${project.basedir}</directory>
        <targetPath>${project.build.directory}/site</targetPath>
        <includes>
          <include>CHANGES.xml</include>
        </includes>
      </resource>
      -->
    </resources>
    <testResources>
      <testResource>
        <filtering>false</filtering>
        <directory>${project.build.testSourceDirectory}</directory>
        <includes>
          <include>**/*</include>
        </includes>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
      <testResource>
        <filtering>false</filtering>
        <directory>src/test/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </testResource>
    </testResources>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh</artifactId>
        <version>${wagon-ssh.version}</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${maven.compiler.source}</source>
            <target>${maven.compiler.target}</target>
            <encoding>UTF-8</encoding>
            <annotationProcessorPaths>
              <path>
                <groupId>com.github.therapi</groupId>
                <artifactId>therapi-runtime-javadoc-scribe</artifactId>
                <version>${therapi.version}</version>
              </path>
              <annotationProcessorPath>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </annotationProcessorPath>
            </annotationProcessorPaths>
          </configuration>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <skip>${maven.javadoc.skip}</skip>
            <outputDirectory>${project.build.directory}</outputDirectory>
            <sourcepath>${project.build.directory}/generated-sources/delombok</sourcepath>
            <sourceFileIncludes>
              <sourceInclude>com/norconex/**/*.java</sourceInclude>
            </sourceFileIncludes>
            <additionalJOptions>
              <additionalJOption>-Xdoclint:all</additionalJOption>
              <additionalJOption>-Xdoclint:-missing</additionalJOption>
            </additionalJOptions>
            <show>protected</show>
            <nodeprecated>false</nodeprecated>
            <detectLinks>false</detectLinks>
            <!-- Until Lombok fixes JavaDoc generation with @SuperBuilder:
                 https://github.com/projectlombok/lombok/issues/3147 -->
            <failOnError>false</failOnError>            
           
            <detectLinks>false</detectLinks>
            <links>
            <!-- We're trying to resolve links for all above dependencies 
                 that are referenced in our JavaDoc. 
                 Do not end with forward slash as it can cause issues
                 finding the links.
              -->

              <!-- Norconex dependencies -->
              <link>https://opensource.norconex.com/commons/lang/v3/apidocs</link>
              <link>https://opensource.norconex.com/importer/v4/apidocs</link>
              <link>https://opensource.norconex.com/committers/core/v4/apidocs</link>
              <link>https://opensource.norconex.com/crawlers/core/v4/apidocs</link>

              <!-- Regular dependencies -->
              <link>https://commons.apache.org/proper/commons-lang/javadocs/api-release</link>
              <link>https://commons.apache.org/proper/commons-collections/javadocs/api-${commons-collections4.version}</link>
              <link>https://commons.apache.org/proper/commons-io/javadocs/api-release</link>
              <link>https://commons.apache.org/proper/commons-text/apidocs</link>
              <link>https://commons.apache.org/proper/commons-cli/javadocs/api-release</link>
              <link>https://commons.apache.org/proper/commons-logging/javadocs/api-release</link>
              <link>https://picocli.info/apidocs</link>
              <link>https://velocity.apache.org/engine/${velocity-engine.version}/apidocs</link>
              <link>https://www.slf4j.org/apidocs</link>
              <!-- Missing: xerces (1.1 schema), xpath2, java-cup, jackson/fasterxml --> 

              <!-- Test dependencies -->
              <link>https://junit.org/junit5/docs/${junit-jupiter.version}/api</link>
              <link>https://ant.apache.org/manual/api</link>
            </links>
          </configuration>
          <executions>
            <execution>
              <id>make-javadoc</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
            </archive>
            <excludes>
              <exclude>THIRD-PARTY.txt</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
          <!--
          <configuration>
            <allowIncompleteProjects>true</allowIncompleteProjects>
          </configuration>
          -->          
          <inherited>true</inherited>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <!-- Most of the following is currently required by Ignite -->
            <argLine>
              ${jacocoArgLine} 
              -Xms512m
              -Xmx512m
              -Djava.net.preferIPv4Stack=true
              -Dio.netty.tryReflectionSetAccessible=true
            </argLine>
          </configuration>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>2.5.0</version>
          <executions>
            <execution>
              <id>add-third-party</id>
              <goals>
                <goal>add-third-party</goal>
              </goals>
              <phase>generate-resources</phase>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>${gmavenplus-plugin.version}</version>
          <executions>
            <execution>
              <?m2e ignore?>
              <id>copy-licenses</id>
              <goals>
                <goal>execute</goal>
              </goals>
              <phase>prepare-package</phase> 
              <configuration>
                <scripts>
                  <script>${project.parent.basedir}/assembly/licenses/copy-licenses.groovy</script>
                </scripts>
              </configuration>
            </execution>
            <execution>
              <?m2e ignore?>
              <id>verify-sonar</id>
              <goals>
                <goal>execute</goal>
              </goals>
              <phase>verify</phase> 
              <configuration>
                <scripts>
                  <script>${project.parent.basedir}/assembly/sonar/run-sonar-analysis.groovy</script>
                </scripts>
              </configuration>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.apache.groovy</groupId>
              <artifactId>groovy</artifactId>
              <version>${groovy.version}</version>
              <scope>runtime</scope>
            </dependency>
            <dependency>
              <groupId>org.apache.groovy</groupId>
              <artifactId>groovy-json</artifactId>
              <version>${groovy.version}</version>
              <scope>runtime</scope>
            </dependency>            
          </dependencies>        
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
          <executions>
            <execution>
              <id>make-dist-assembly</id>
              <phase>package</phase>
              <goals>
                <goal>single</goal>
              </goals>
              <configuration>
                <descriptors>
                  <descriptor>${project.parent.basedir}/assembly/dist.xml</descriptor>
                </descriptors>
                <appendAssemblyId>false</appendAssemblyId>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>


        <!-- Use VM argument -Dgpg.skip=true to disable GPG signing. -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven-gpg-plugin.version}</version>
          <executions>
            <execution>
              <id>sign-artifacts</id>
              <phase>verify</phase>
              <goals>
                <goal>sign</goal>
              </goals>
              <configuration>
                <!-- This is necessary for gpg to not try to use the pinentry programs -->
                <gpgArguments>
                  <arg>--pinentry-mode</arg>
                  <arg>loopback</arg>
                </gpgArguments>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>

        <plugin>
          <groupId>org.sonatype.central</groupId>
          <artifactId>central-publishing-maven-plugin</artifactId>
          <version>0.8.0</version>
          <extensions>true</extensions>
          <configuration>
            <publishingServerId>central</publishingServerId>
          </configuration>
        </plugin>

        <!-- TODO: Do we still publish javadocs via mvn site? Delete if not. -->         
<!--        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.wagon</groupId>
              <artifactId>wagon-ssh</artifactId>
              <version>${wagon-ssh.version}</version>
            </dependency>
          </dependencies>
          <inherited>true</inherited>
        </plugin>        
        
-->

        <plugin>
          <groupId>net.revelc.code.formatter</groupId>
          <artifactId>formatter-maven-plugin</artifactId>
          <version>${formatter-maven-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <compilerSource>${java.version}</compilerSource>
            <compilerCompliance>${java.version}</compilerCompliance>
            <compilerTargetPlatform>${java.version}</compilerTargetPlatform>
            <lineEnding>LF</lineEnding>
            <encoding>UTF-8</encoding>
            <configFile>${project.parent.basedir}/norconex-formatter.xml</configFile>
            <includes>
              <include>com/norconex/**/*.java</include>
            </includes>
          </configuration>
          <inherited>true</inherited>
        </plugin>
        
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${lombok-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>delombok</id>
              <phase>process-sources</phase>
              <goals>
                <goal>delombok</goal>
              </goals>
              <configuration>
                <addOutputDirectory>false</addOutputDirectory>
                <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
              </configuration>
            </execution>
            <!--
              We are not generating javadoc on tests so consider dropping this:
              -->
            <!--
            <execution>
              <id>test-delombok</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>testDelombok</goal>
              </goals>
              <configuration>
                <addOutputDirectory>false</addOutputDirectory>
                <sourceDirectory>${project.basedir}/src/test/java</sourceDirectory>
              </configuration>
            </execution>
            -->
          </executions>
          <inherited>true</inherited>
        </plugin>

        <!-- From command-prompt:  
           mvn versions:display-dependency-updates ^
               versions:display-plugin-updates ^
               versions:display-property-updates ^
               -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn
           -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>compile</phase>
              <goals>
                <goal>display-dependency-updates</goal>
                <goal>display-plugin-updates</goal>
                <goal>display-property-updates</goal>
              </goals>
            </execution>
          </executions>            
          <inherited>true</inherited>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-versions</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireMavenVersion>
                    <version>[3.8.8,)</version>
                  </requireMavenVersion>
                  <requireJavaVersion>
                    <version>[${java.version},)</version>
                  </requireJavaVersion>
                </rules>    
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
 
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>prepare-agent</id>              
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>argLine</propertyName>
                <destFile>${project.build.directory}/jacoco.exec</destFile>
              <!-- 
                <propertyName>surefireArgLine</propertyName>
              -->
              </configuration>
            </execution>
            <execution>
              <id>report</id>
              <phase>verify</phase>
              <goals>
                <goal>report</goal>
              </goals>
              <configuration>
                <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                <outputDirectory>${project.build.directory}/site/jacoco</outputDirectory>
                <formats>
                  <format>XML</format>
                </formats>
              </configuration>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
 
        <!-- Done by groovy script now (gmaven-plus-plugin) -->
        <!--
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar.version}</version>
          <executions>
            <execution>
              <id>sonar</id>
              <phase>verify</phase>
              <goals>
                <goal>sonar</goal>
              </goals>
            </execution>
          </executions>
          <inherited>true</inherited>
        </plugin>
        -->
 
        <plugin>
          <groupId>org.ec4j.maven</groupId>
          <artifactId>editorconfig-maven-plugin</artifactId>
          <version>${editorconfig-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>fix-editorconfig</id>
              <goals>
                <goal>format</goal>
              </goals>
              <phase>validate</phase>
            </execution>
            <execution>
              <id>check-editorconfig</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>verify</phase>
              <configuration>
                <failOnFormatViolation>true</failOnFormatViolation>
              </configuration>
            </execution>
          </executions>
          <configuration>
            <includes>
              <include>**/*.java</include>
              <include>**/*.json</include>
              <include>**/*.md</include>
              <include>**/*.xml</include>
              <include>**/*.yaml</include>
              <!-- 
                We don't include .txt on purpose. We rarely use
                and when we do, it is sometimes to test oddities.
                -->
            </includes>
          </configuration>          
          <inherited>true</inherited>
        </plugin>
         
      </plugins>
    </pluginManagement>

    <plugins>
    
      <!-- === Plugins bound to "Verify" (order matters) == -->
    
      <!-- Enforce formatting rules first to fail fast if there are issues -->
      <plugin>
        <groupId>org.ec4j.maven</groupId>
        <artifactId>editorconfig-maven-plugin</artifactId>
      </plugin>

      <!-- Run JaCoCo to generate coverage reports -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>

      <!-- Run SonarQube to analyze code and consume JaCoCo reports -->
      <!--
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>            
      -->

      <!--  Use VM argument -Dgpg.skip=true to disable GPG signing. -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
      </plugin>

      <!-- === Other plugins == -->

      <plugin>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-maven-plugin</artifactId>
      </plugin>
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>      
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>net.revelc.code.formatter</groupId>
        <artifactId>formatter-maven-plugin</artifactId>
      </plugin>          
      
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>      
      </plugin>          
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <?m2e ignore?>
            <id>unpack-shared-resources</id>
            <goals>
              <goal>unpack</goal>
            </goals>
            <phase>process-resources</phase>
            
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>com.norconex.commons</groupId>
                  <artifactId>norconex-commons-lang</artifactId>
                  <version>${norconex-commons-lang.version}</version>
                  <classifier>resources</classifier>
                  <type>zip</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${project.build.directory}/shared-resources</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>              
          </execution>
        </executions>
      </plugin>        

    </plugins>

  </build>

  <organization>
    <name>Norconex Inc.</name>
    <url>https://norconex.com</url>
  </organization>
  <url>https://opensource.norconex.com/crawlers</url>
  <scm>
    <url>https://github.com/Norconex/crawlers</url>
    <connection>scm:git:git@github.com:Norconex/crawlers.git</connection>
    <developerConnection>scm:git:git@github.com:Norconex/crawlers.git</developerConnection>
  </scm>
  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/Norconex/crawlers/issues</url>
  </issueManagement>

  <developers>
    <developer>
      <id>Norconex</id>
      <email>info@norconex.com</email>
      <organization>Norconex Inc.</organization>
      <organizationUrl>https://norconex.com</organizationUrl>
    </developer>
  </developers>
  <contributors>
  </contributors>

  <description>Maven parent POM for Norconex crawler-related projects.</description>
  <modules>
    <module>committer/core</module>
    <module>committer/solr</module>
    <module>committer/elasticsearch</module>
    <module>committer/idol</module>
    <module>committer/amazoncloudsearch</module>
    <module>committer/sql</module>
    <module>committer/neo4j</module>
    <module>committer/azurecognitivesearch</module>
    <module>committer/apachekafka</module>
    <module>importer</module>
    <module>grid/core</module>
    <module>grid/local</module>
    <module>grid/jdbc</module>
    <module>crawler/core</module>
    <module>crawler/web</module>
    <module>crawler/fs</module>
    
<!--
  TODO: when ready, add these:
    <XXmodule>tools/config-converter</module>
 -->
  </modules>
</project>
