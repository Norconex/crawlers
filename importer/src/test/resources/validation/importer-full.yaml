#  Copyright 2023-2024 Norconex Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.


# This is a config file with many configuration options being set
# to test validation.

---
tempDir: /some/path/
maxMemoryInstance: 99
maxMemoryPool: 99
handlers:
  - if:
      condition:
        class: DateCondition
        fieldMatcher:
          pattern: date_created
        valueMatcherStart:
          operator: ">="
          date: NOW-10Y
        valueMatcherEnd:
          operator: "<"
          date: NOW-1Y
      then:
        - handler:
            class: CsvSplitter
            separatorCharacter: A
            quoteCharacter: B
            escapeCharacter: C
            useFirstRowAsFields: false
            linesToSkip: 0
            referenceColumn: columnA
            contentColumns: [columnB, columnC, columnD]    
      else:
        - handler:
            class: Reject
...

#
#  <preParseHandlers>
#    <handler class="com.norconex.importer.handler.filter.impl.DateMetadataFilter"
#        onMatch="include" field="FIELD" format="FORMAT" >
#      <restrictTo>
#        <fieldMatcher>bfield</fieldMatcher>
#        <valueMatcher>.*blah</valueMatcher>
#      </restrictTo>
#      <condition operator="ge" date="TODAY-7" />
#      <condition operator="lt" date="TODAY" />
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.DOMFilter"
#            onMatch="exclude"  ignoreCase="false" sourceCharset="UTF-8" 
#            selector="selector" extract="text" parser="html">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <regex>.*</regex>
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.EmptyMetadataFilter"
#            onMatch="include" fields="FIELD1, FIELD2" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.NumericMetadataFilter"
#            onMatch="include" field="age" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <condition operator="ge" number="20" />
#      <condition operator="lt" number="30" />
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.RegexContentFilter"
#            onMatch="include"  ignoreCase="false"
#            sourceCharset="UTF-8" maxReadSize="9999">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <regex>.*regex.*</regex>
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.RegexMetadataFilter"
#          onMatch="include" field="title">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <regex>.*potato.*</regex>
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.RegexReferenceFilter"
#          onMatch="include">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <regex>.*/login/.*</regex>
#    </handler>
#    <handler class="com.norconex.importer.handler.filter.impl.ScriptFilter"
#            engineName="MyEngine" onMatch="include" 
#            sourceCharset="UTF-8" maxReadSize="999">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <script>[CDATA[
#        var myvar = "test";
#      ]]</script>
#    </handler>    
#    <handler class="com.norconex.importer.handler.splitter.impl.CsvSplitter"
#          separatorCharacter="A" quoteCharacter="B" escapeCharacter="C"
#          useFirstRowAsFields="false" linesToSkip="0" referenceColumn="columnA"
#          contentColumns="columnB, columnC, columnD">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.splitter.impl.DOMSplitter"
#          selector="div.contact" sourceCharset="UTF-8" parser="xml">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>    
#    <handler class="com.norconex.importer.handler.splitter.impl.TranslatorSplitter"
#          api="microsoft" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <ignoreContent>true</ignoreContent>
#      <ignoreNonTranslatedFields>false</ignoreNonTranslatedFields>
#      <fieldsToTranslate>field1, field2</fieldsToTranslate>
#      <sourceLanguageField>lang</sourceLanguageField>
#      <sourceLanguage>en</sourceLanguage>
#      <targetLanguages>fr,it</targetLanguages>
#      <clientId>blahid</clientId>
#      <clientSecret>blahsecret</clientSecret>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.CharacterCaseTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <characterCase fieldName="title" type="lower" applyTo="field" />
#      <characterCase fieldName="title" type="string" applyTo="value" />
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.CharsetTagger"
#          sourceCharset="ISO-8859-1" targetCharset="UTF-8">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <fieldsRegex>description</fieldsRegex>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.ConstantTagger"
#          onConflict="replace">
#      <constant name="source">web</constant>
#      <constant name="department">HR</constant>
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.CopyTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <copy fromField="creator"   toField="author" overwrite="true" />
#      <copy fromField="publisher" toField="author" overwrite="true" />
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.CountMatchesTagger"
#          sourceCharset="UTF-8" maxReadSize="999" >  
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <countMatches fromField="ff1" toField="tf1" 
#          ignoreCase="true" regex="true">.*</countMatches>
#      <countMatches fromField="ff2" toField="tf2"
#          ignoreCase="true" regex="true">.*</countMatches>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.CurrentDateTagger"
#          field="datefield" format="yyy-MM-dd" locale="fr" overwrite="true" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.DateFormatTagger"
#          fromField="FF"  toField="TF" fromLocale="fr" toLocale="en"
#          toFormat="EPOCH" keepBadDates="false" overwrite="true" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <fromFormat>yyyy-MM-dd</fromFormat>
#      <fromFormat>yy-MM-dd</fromFormat>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.DebugTagger"
#          logFields="field1,field2"
#          logContent="true"
#          logLevel="INFO" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.DeleteTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <fields>field1, field2</fields>
#      <fieldsRegex>^[Xx]-.*</fieldsRegex>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.DocumentLengthTagger"
#          field="docSize" overwrite="true" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.DOMTagger"
#            fromField="FROMFIELD" parser="xml" sourceCharset="UTF-8">
#      <restrictTo>
#        <fieldMatcher>bfield</fieldMatcher>
#        <valueMatcher ignoreCase="false" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <restrictTo>
#        <fieldMatcher>afield</fieldMatcher>
#        <valueMatcher method="regex">.*</valueMatcher>
#      </restrictTo>
#      <dom selector="a selector" toField="TODOFIELD1"
#           overwrite="false"     extract="ownText" 
#           matchBlanks="false"   defaultValue="NOVALUE1" />
#      <dom selector="another selector" toField="TODOFIELD2"
#           extract="tagName"     defaultValue="NOVALUE2" />
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.ExternalTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <command inputDisabled="true">
#        c:\Apps\myapp.exe ${INPUT} ${OUTPUT_META} ${REFERENCE}
#      </command>
#      <metadata inputFormat="json" outputFormat="xml">
#        <pattern field="field1">&lt;title&gt;&lt;(title)&gt;</pattern>
#        <pattern fieldGroup="2" valueGroup="1" ignoreCase="false">(.*?):(.*)</pattern>
#      </metadata>
#      <environment>
#        <variable name="var1">blah</variable>
#        <variable name="var2">blah blah</variable>
#      </environment>
#      <tempDir>/some/dir</tempDir>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.ForceSingleValueTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <singleValue field="authors" action="mergeWith:, "/>
#      <singleValue field="title" action="keepLast"/>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.HierarchyTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <hierarchy fromField="FF1" toField="TF1" 
#              fromSeparator="/"  toSeparator="-" overwrite="true" />
#      <hierarchy fromField="FF2" toField="TF2" 
#              fromSeparator="&#45;&#45;"  toSeparator="|" overwrite="false" />
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.KeepOnlyTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <fields>title, description</fields>
#      <fieldsRegex>collector\..*</fieldsRegex>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.LanguageTagger"
#          keepProbabilities="true" sourceCharset="UTF-8"
#          maxReadSize="999" fallbackLanguage="en" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <languages>en,fr, it, es</languages>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.MergeTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <merge toField="title" deleteFromFields="true"             
#             singleValue="true" singleValueSeparator="," >
#        <fromFields>pubname</fromFields>
#        <fromFieldsRegex>.*title</fromFieldsRegex>
#      </merge>
#      <merge toField="TF"><fromFields>desc, dc.description</fromFields></merge>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.RenameTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <rename fromField="FF1" toField="TF1" overwrite="true" />
#      <rename fromField="FF2" toField="TF2" overwrite="false" />
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.ReplaceTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <replace fromField="FF" toField="TF" ignoreCase="false"
#               regex="false" wholeMatch="false" replaceAll="true">
#          <fromValue>apple</fromValue><toValue>orange</toValue>
#      </replace>
#      <replace fromField="FF2" toField="TF2" ignoreCase="false"
#               regex="false" wholeMatch="false" replaceAll="true">
#          <fromValue>_</fromValue><toValue xml:space="preserve"> </toValue>
#      </replace>
#      <replace fromField="FF3" toField="TF3" ignoreCase="false"
#               regex="false" wholeMatch="false" replaceAll="true">
#          <fromValue>apple</fromValue>
#      </replace>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.ScriptTagger"
#          engineName="myEngine" sourceCharset="UTF8" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <script>var myscript = "blah";</script>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.SplitTagger">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <split fromField="ff1" toField="tf1" regex="true">
#          <separator>/</separator>
#      </split>
#      <split fromField="ff2" toField="tf2" regex="false">
#          <separator>&#45;&#45;</separator>
#      </split>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.TextBetweenTagger"
#          inclusive="true" ignoreCase="true"
#          sourceCharset="UTF-8" maxReadSize="9999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <textBetween name="targetFieldName">
#          <start>OPEN</start><end>CLOSE</end>
#      </textBetween>
#      <textBetween name="targetFieldName">
#          <start>[</start><end>]</end>
#      </textBetween>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.TextPatternTagger"
#          sourceCharset="UTF-8" maxReadSize="9999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <pattern field="field1" valueGroup="1" fieldGroup="2">potato</pattern>
#      <pattern field="field2" ignoreCase="false">apple</pattern>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.TextStatisticsTagger"
#          sourceCharset="UTF-8" fieldName="myfield" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.TitleGeneratorTagger"
#          fromField="ff" toField="tf" overwrite="false" titleMaxLength="200"
#          detectHeading="true" detectHeadingMinLength="20"
#          detectHeadingMaxLength="200" sourceCharset="UTF-8" maxReadSize="9999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.tagger.impl.TruncateTagger"
#          fromField="field1"
#          maxLength="50"
#          toField="field2"
#          overwrite="true"
#          appendHash="true"
#          suffix="!!!" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>    
#    <handler class="com.norconex.importer.handler.tagger.impl.UUIDTagger"
#          field="uuidField" overwrite="true" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.CharsetTransformer"
#          sourceCharset="ISO-8859-1" targetCharset="UTF-8">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.ExternalTransformer">
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <command>c:\Apps\myapp.exe ${INPUT} ${OUTPUT} ${REFERENCE}</command>
#      <metadata inputFormat="json" outputFormat="xml">
#        <pattern field="field1">&lt;title&gt;&lt;(title)&gt;</pattern>
#        <pattern fieldGroup="2" valueGroup="1" ignoreCase="false">(.*?):(.*)</pattern>
#      </metadata>
#      <environment>
#        <variable name="var1">blah</variable>
#        <variable name="var2">blah blah</variable>
#      </environment>
#      <tempDir>/some/dir</tempDir>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.ReduceConsecutivesTransformer"
#          ignoreCase="true" sourceCharset="UTF-8" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <reduce>hello\s</reduce>
#      <reduce>\n\n</reduce>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.ReplaceTransformer"
#          ignoreCase="true" sourceCharset="UTF-8" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <replace><fromValue>apple</fromValue><toValue>orange</toValue></replace>
#      <replace><fromValue>one</fromValue><toValue>two</toValue></replace>
#      <replace><fromValue>blah</fromValue></replace>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.ScriptTransformer"
#          engineName="myEngine" sourceCharset="blah" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <script>var blah = 'blah';</script>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.StripAfterTransformer"
#          inclusive="true" ignoreCase="true" sourceCharset="UTF-8" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <stripAfterRegex>blah</stripAfterRegex>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.StripBeforeTransformer"
#          inclusive="true" ignoreCase="true" sourceCharset="UTF-8" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <stripBeforeRegex>blah</stripBeforeRegex>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.StripBetweenTransformer"
#          inclusive="true" ignoreCase="true" sourceCharset="UTF-8" maxReadSize="999" >
#      <restrictTo>
#        <fieldMatcher>FIELD</fieldMatcher>
#        <valueMatcher ignoreCase="true" method="regex">.*</valueMatcher>
#      </restrictTo>
#      <stripBetween><start>OPEN</start><end>CLOSE</end></stripBetween>
#      <stripBetween><start>A</start><end>Z</end></stripBetween>
#    </handler>
#    <handler class="com.norconex.importer.handler.transformer.impl.SubstringTransformer"
#          begin="100" end="10000"/>
#  </preParseHandlers>
#
#  <parse>
#    <contentTypeIncludes>
#      <matcher method="regex">.*potato.*</matcher>
#      <matcher method="regex">.*carrot.*</matcher>
#    </contentTypeIncludes>
#    <contentTypeExcludes>
#      <matcher method="regex">.*apple.*</matcher>
#      <matcher method="regex">.*orange.*</matcher>
#    </contentTypeExcludes>
#    <errorsSaveDir>/some/path</errorsSaveDir>
#    <defaultParser class="com.norconex.importer.parser.impl.DefaultParser" />
#    <parsers>
#      <parser contentType="application/pdf" 
#            class="com.norconex.importer.parser.impl.ExternalParser" >
#        <command>c:\Apps\myapp.exe ${INPUT} ${OUTPUT}</command>
#        <metadata inputFormat="xml" outputFormat="json">
#          <pattern field="field1">&lt;title&gt;&lt;(title)&gt;</pattern>
#          <pattern fieldGroup="2" valueGroup="1" ignoreCase="false">(.*?):(.*)</pattern>
#        </metadata>
#        <environment>
#          <variable name="var1">blah</variable>
#          <variable name="var2">blah blah</variable>
#        </environment>
#        <tempDir>/some/dir</tempDir>
#      </parser>      
#    </parsers>
#    <parseOptions>
#      <ocr disabled="true">
#        <tesseractPath>/path/to/tesseract/exe</tesseractPath>
#        <tessdataPath>/path/to/tesseract/data</tessdataPath>
#        <contentTypes>
#          <matcher>text/html</matcher>
#        </contentTypes>
#        <applyRotation>true</applyRotation>
#        <colorSpace>abc</colorSpace>
#        <density>128</density>
#        <depth>14</depth>
#        <enableImagePreprocessing>true</enableImagePreprocessing>
#        <filter>alpha</filter>
#        <imageMagickPath>/path/to/magick</imageMagickPath>
#        <language>eng+fra</language>
#        <maxFileSizeToOcr>1000000</maxFileSizeToOcr>
#        <minFileSizeToOcr>100000</minFileSizeToOcr>
#        <pageSegMode>mode</pageSegMode>
#        <pageSeparator>sep</pageSeparator>
#        <preserveInterwordSpacing>true</preserveInterwordSpacing>
#        <resize>64</resize>
#        <timeoutSeconds>3</timeoutSeconds>
#      </ocr>
#      <embedded>
#        <splitEmbeddedOf>
#          <matcher>application/zip</matcher>
#        </splitEmbeddedOf>
#        <skipEmmbbeded>
#          <matcher method="regex">image/.*</matcher>
#        </skipEmmbbeded>
#        <skipEmmbbededOf>
#          <matcher>application/pdf</matcher>
#        </skipEmmbbededOf>
#      </embedded>
#      <options>
#        <option name="Some option">Some Value</option>
#      </options>
#    </parseOptions>
#  </parse>
#
#  <!-- No point re-testing them all here, just have a few short ones in mixed order. -->
#  <postParseHandlers>
#    <handler class="com.norconex.importer.handler.tagger.impl.DebugTagger"/>
#    <handler class="com.norconex.importer.handler.transformer.impl.CharsetTransformer"/>
#    <handler class="com.norconex.importer.handler.tagger.impl.LanguageTagger"/>
#    <handler class="com.norconex.importer.handler.splitter.impl.DOMSplitter" selector="blah"/>
#    <handler class="com.norconex.importer.handler.filter.impl.EmptyMetadataFilter" fields="FIELD1" />
#  </postParseHandlers>
#
#  <responseProcessors>
#    <responseProcessor 
#        class="com.norconex.importer.response.DummyResponseProcessor" />
#  </responseProcessors>
#
#</importer>
