<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2024 Norconex Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<!DOCTYPE xml>
<httpcollector id="Collector/CrawlSession Config">

  <workDir>/workdir</workDir>
  
  <eventListeners>
    <listener class="com.norconex.collector.http.crawler.event.impl.URLStatusCrawlerEventListener">
      <statusCodes>404</statusCodes>
      <outputDir>/tmp/path</outputDir>
      <fileNamePrefix>broken-links</fileNamePrefix>
    </listener>
  </eventListeners>

  <crawlerDefaults>
    <startURLs 
        stayOnDomain="true" 
        includeSubdomains="true" 
        stayOnPort="true" 
        stayOnProtocol="true"
        async="true">
      <url>http://www.example.com</url>
      <url>http://www.sample.com</url>
      <urlsFile>/local/path/to/a/file/full/of/urls.txt</urlsFile>
      <sitemap>http://www.somewhere.com/sitemap.xml</sitemap>
      <provider class="com.norconex.collector.http.crawler.MockStartURLsProvider"/>
    </startURLs>
    <keepDownloads>true</keepDownloads>
    <keepReferencedLinks>INSCOPE, OUTSCOPE, MAXDEPTH</keepReferencedLinks>
    <maxDepth>99</maxDepth>
    <numThreads>1</numThreads>
    <maxDocuments>111</maxDocuments>
    <orphansStrategy>PROCESS</orphansStrategy>
    <fetchHttpHead>OPTIONAL</fetchHttpHead>
    <fetchHttpGet>DISABLED</fetchHttpGet>
    
    <eventListeners>
      <listener class="URLStatusCrawlerEventListener">
        <statusCodes>200</statusCodes>
        <outputDir>/tmp/okpath</outputDir>
        <fileNamePrefix>good-pages</fileNamePrefix>
      </listener>
    </eventListeners>
    
    <urlNormalizer disabled="false" class="com.norconex.collector.http.url.impl.GenericURLNormalizer">
      <normalizations>
        lowerCaseSchemeHost, upperCaseEscapeSequence, 
        decodeUnreservedCharacters, removeDefaultPort 
      </normalizations>
      <replacements>
        <replace><match>A</match><replacement>B</replacement></replace>
        <replace><match>C</match></replace>
      </replacements>
    </urlNormalizer>
    <delay class="com.norconex.collector.http.delay.impl.GenericDelayResolver"
          default="1s" ignoreRobotsCrawlDelay="true" scope="crawler" >
      <schedule dayOfWeek="from Monday to Friday"
          dayOfMonth="from 1 to 10" time="from 8:00 to 16:30">10s</schedule>
      <schedule dayOfWeek="from Saturday to Sunday"
          dayOfMonth="from 11 to 28" time="from 6:00 to 7:30">20000</schedule>
    </delay>    
    <dataStoreEngine class="com.norconex.collector.core.store.impl.mvstore.MVStoreDataStoreEngine">
      <pageSplitSize>1000</pageSplitSize>
      <compress>1</compress>
      <cacheConcurrency>0</cacheConcurrency>
      <cacheSize>1000</cacheSize>
      <autoCompactFillRate>100</autoCompactFillRate>
      <autoCommitBufferSize>100</autoCommitBufferSize>
      <autoCommitDelay>100</autoCommitDelay>    
    </dataStoreEngine>
    
    <httpFetchers maxRetries="5" retryDelay="10 seconds">
      <fetcher class="com.norconex.collector.http.fetch.impl.GenericHttpFetcher">
          <userAgent>Here we crawl!</userAgent>
          <validStatusCodes>200,201</validStatusCodes>
          <notFoundStatusCodes>404,401</notFoundStatusCodes>
          <forceContentTypeDetection>true</forceContentTypeDetection>
          <forceCharsetDetection>true</forceCharsetDetection>
          <headersPrefix>myprefix</headersPrefix>
          <detectContentType>true</detectContentType>
          <detectCharset>true</detectCharset>
          <redirectURLProvider fallbackCharset="UTF-8"/>
          <cookieSpec>ignoreCookies</cookieSpec>
          <authentication>
            <formParams>
              <param name="param1">value1</param>
              <param name="param2">value2</param>
            </formParams>
            <method>digest</method>
            <credentials>
              <username>user</username>
              <password>pass</password>
              <passwordKey>
                <value>/path/to/my.key</value>
                <source>file</source>
              </passwordKey>              
            </credentials>
            <formUsernameField>userfield</formUsernameField>
            <formPasswordField>pwdfield</formPasswordField>
            <formSelector>#myform</formSelector>
            <formCharset>UTF-8</formCharset>
            <url>authURL</url>
            <host>
              <name>host</name>
              <port>9</port>
            </host>
            <realm>authRealm</realm>
            <workstation>authWorkstation</workstation>
            <domain>authDomain</domain>
            <preemptive>true</preemptive>
          </authentication>
          <connectionTimeout>1</connectionTimeout>
          <socketTimeout>2 minutes</socketTimeout>
          <connectionRequestTimeout>3 min 30s</connectionRequestTimeout>
          <connectionCharset>US-ASCII</connectionCharset>
          <expectContinueEnabled>true</expectContinueEnabled>
          <maxRedirects>4</maxRedirects>
          <localAddress>address</localAddress>
          <maxConnections>5</maxConnections>
          <maxConnectionsPerRoute>6</maxConnectionsPerRoute>
          <maxConnectionIdleTime>7</maxConnectionIdleTime>
          <maxConnectionInactiveTime>8</maxConnectionInactiveTime>
          <trustAllSSLCertificates>true</trustAllSSLCertificates>
          <disableSNI>true</disableSNI>
          <sslProtocols>item1,item2</sslProtocols>
          <proxySettings>
            <host>
              <name>host</name>
              <port>9</port>
            </host>
            <realm>realm</realm>
            <scheme>scheme</scheme>
            <credentials>
              <username>username</username>
              <password>pwd</password>
              <passwordKey>
                <value>/path/to/my.key</value>
                <source>file</source>
              </passwordKey>              
            </credentials>
          </proxySettings>
          <disableIfModifiedSince>true</disableIfModifiedSince>
          <headers>
            <header name="head1"></header>
            <header name="head2">value2</header>
          </headers>
      </fetcher>
    </httpFetchers>    
    
    <referenceFilters>
      <filter class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"
          onMatch="exclude" caseSensitive="true">xml,pdf,doc</filter>
      <filter class=".ReferenceFilter" onMatch="exclude">
        <valueMatcher ignoreCase="false" method="regex">.*example.com.*</valueMatcher>
      </filter>
      <filter class="com.norconex.collector.http.filter.impl.SegmentCountURLFilter"
              onMatch="exclude" count="5" duplicate="false" separator="/" />
    </referenceFilters>    
    <robotsTxt ignore="false" class="com.norconex.collector.http.robot.impl.StandardRobotsTxtProvider"/>
    <sitemapResolver ignore="false" lenient="true" 
        class="com.norconex.collector.http.sitemap.impl.GenericSitemapResolver">
      <tempDir>/tmp/</tempDir>
      <path>/path1/</path>
      <path>/path2/</path>
    </sitemapResolver>

    <recrawlableResolver class="com.norconex.collector.http.recrawl.impl.GenericRecrawlableResolver"
             sitemapSupport="last" >
         <minFrequency applyTo="reference" caseSensitive="false" value="always" >
             .*\.pdf
         </minFrequency>
         <minFrequency applyTo="contentType" caseSensitive="true" value="3000" >
             text/html
         </minFrequency>
    </recrawlableResolver>
    
    <metadataFilters>
      <filter class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"
          onMatch="exclude" caseSensitive="true">xml,pdf,doc</filter>
      <filter class=".ReferenceFilter" onMatch="exclude">
        <valueMatcher ignoreCase="true" method="regex">.*example.com.*</valueMatcher>
      </filter>
      <filter class=".MetadataFilter" onMatch="include">
        <valueMatcher ignoreCase="true" method="regex">Blah.*</valueMatcher>
        <fieldMatcher>title</fieldMatcher>
      </filter>
      <filter class="com.norconex.collector.http.filter.impl.SegmentCountURLFilter"
              onMatch="exclude" count="5" duplicate="false" separator="/" />
    </metadataFilters>
    <canonicalLinkDetector class="com.norconex.collector.http.canon.impl.GenericCanonicalLinkDetector"
          ignore="false">
      <contentTypes>text/html</contentTypes>
    </canonicalLinkDetector>
    <metadataChecksummer 
        class="com.norconex.collector.http.checksum.impl.LastModifiedMetadataChecksummer"
        disabled="false" keep="true" toField="myfield" />
        
    <robotsMeta ignore="false" 
       class="com.norconex.collector.http.robot.impl.StandardRobotsMetaProvider">
       <headersPrefix>prefix</headersPrefix>
    </robotsMeta>
    <linkExtractors>
      <extractor class="com.norconex.collector.http.link.impl.HtmlLinkExtractor"
          maxURLLength="999" ignoreNofollow="false" 
          commentsEnabled="true" charset="UTF-8" >
        <restrictTo>
          <fieldMatcher>document.contentType</fieldMatcher>
          <valueMatcher>text/html</valueMatcher>
        </restrictTo>
        <schemes>https</schemes>
        <tags>
          <tag name="a" attribute="href" />
          <tag name="frame" attribute="src" />
          <tag name="iframe" attribute="src" />
          <tag name="img" attribute="src" />
          <tag name="meta" attribute="http-equiv" />
        </tags>
        <extractBetween caseSensitive="true">
          <start>start1</start><end>end1</end>
        </extractBetween>
        <extractBetween caseSensitive="false">
          <start>start2</start><end>end2</end>
        </extractBetween>
        <noExtractBetween caseSensitive="true">
          <start>nostart1</start><end>noend1</end>
        </noExtractBetween>
        <noExtractBetween caseSensitive="false">
          <start>nostart2</start><end>noend2</end>
        </noExtractBetween>
      </extractor>
      <extractor class="com.norconex.collector.http.link.impl.HtmlLinkExtractor">
        <tags>
          <tag name="a" attribute="href" />
          <tag name="script" attribute="src" />
        </tags>
      </extractor>
      <extractor class="com.norconex.collector.http.link.impl.RegexLinkExtractor"
          maxURLLength="1234" charset="iso-8859-1">
        <restrictTo>
          <fieldMatcher>document.contentType</fieldMatcher>
          <valueMatcher method="regex">ct.*</valueMatcher>
        </restrictTo>          
        <restrictTo>
          <fieldMatcher>document.reference</fieldMatcher>
          <valueMatcher method="regex">ref.*</valueMatcher>
        </restrictTo>          
        <linkExtractionPatterns>
          <pattern><match>\[(.*?)\]</match><replace>$1</replace></pattern>
          <pattern><match>http://.*?\.html</match></pattern>
        </linkExtractionPatterns>
      </extractor>
      <extractor class="com.norconex.collector.http.link.impl.XMLFeedLinkExtractor">
        <restrictTo>
          <fieldMatcher>document.contentType</fieldMatcher>
          <valueMatcher method="regex">.*</valueMatcher>
        </restrictTo>          
        <restrictTo>
          <fieldMatcher>document.reference</fieldMatcher>
          <valueMatcher method="regex">.*</valueMatcher>
        </restrictTo> 
      </extractor>      
    </linkExtractors>
    <documentFilters>
      <filter class="com.norconex.collector.core.filter.impl.ExtensionReferenceFilter"
          onMatch="exclude" caseSensitive="true">xml,pdf,doc</filter>
      <filter class=".ReferenceFilter" onMatch="exclude">
        <valueMatcher ignoreCase="true" method="regex">.*example.com.*</valueMatcher>
      </filter>
      <filter class=".MetadataFilter" onMatch="include">
        <fieldMatcher>title</fieldMatcher>
        <valueMatcher ignoreCase="true" method="regex">Blah.*</valueMatcher>
      </filter>
      <filter class="com.norconex.collector.http.filter.impl.SegmentCountURLFilter"
              onMatch="exclude" count="5" duplicate="false" separator="/" />
    </documentFilters>
    <preImportProcessors>
      <processor class="com.norconex.collector.http.processor.impl.FeaturedImageProcessor">
         <pageContentTypePattern>text/html</pageContentTypePattern>
         <domSelector>dom dom</domSelector>
         <minDimensions>425x312</minDimensions>
         <largest>true</largest>
         <imageCacheSize>1234</imageCacheSize>
         <imageCacheDir>/some/path</imageCacheDir>
         <storage>url, inline</storage>
         <scaleQuality>medium</scaleQuality>
         <scaleDimensions>25</scaleDimensions>
         <scaleStretch>true</scaleStretch>
         <imageFormat>gif</imageFormat>
         <storageDiskDir structure="datetime">/some/other/path</storageDiskDir>
         <storageDiskField>diskField</storageDiskField>
         <storageInlineField>inlineField</storageInlineField>
         <storageUrlField>urlField</storageUrlField>
      </processor>      
    </preImportProcessors>

    <!--v3-importer.xml-->

    <documentChecksummer 
        class="com.norconex.collector.core.checksum.impl.MD5DocumentChecksummer"
        disabled="false" keep="true" toField="afield">
      <fieldMatcher method="csv">field1,field2</fieldMatcher>
    </documentChecksummer>
    <postImportProcessors>
      <processor class="com.norconex.collector.http.processor.impl.MockHttpDocumentProcessor"/>
    </postImportProcessors>
    <postImportLinks keep="true">
      <fieldMatcher method="wildcard">myurls*</fieldMatcher>
    </postImportLinks>
    <spoiledReferenceStrategizer 
        class="com.norconex.collector.core.spoil.impl.GenericSpoiledReferenceStrategizer"
        fallbackStrategy="DELETE">
      <mapping state="NOT_FOUND" strategy="DELETE" />
      <mapping state="BAD_STATUS" strategy="DELETE" />
      <mapping state="ERROR" strategy="IGNORE" />
    </spoiledReferenceStrategizer>


    <committers>
      <committer class="com.norconex.committer.core3.fs.impl.JsonFileCommitter">
        <directory>/tmp/somepath</directory>
      </committer>
    </committers>

  </crawlerDefaults>
  
  <crawlers>
    <crawler id="myCrawler1">
      <numThreads>2</numThreads>
      <maxDocuments>222</maxDocuments>
      <orphansStrategy>DELETE</orphansStrategy>
    </crawler>
    <crawler id="myCrawler2">
      <numThreads>3</numThreads>
      <maxDocuments>333</maxDocuments>
      <orphansStrategy>IGNORE</orphansStrategy>
    </crawler>
  </crawlers>


</httpcollector>